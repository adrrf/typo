/*
 * generated by Xtext 2.30.0
 */
grammar InternalTypoDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package adrf.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package adrf.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import adrf.xtext.services.TypoDSLGrammarAccess;

}
@parser::members {
	private TypoDSLGrammarAccess grammarAccess;

	public void setGrammarAccess(TypoDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDocument
entryRuleDocument
:
{ before(grammarAccess.getDocumentRule()); }
	 ruleDocument
{ after(grammarAccess.getDocumentRule()); } 
	 EOF 
;

// Rule Document
ruleDocument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDocumentAccess().getGroup()); }
		(rule__Document__Group__0)
		{ after(grammarAccess.getDocumentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlocks
entryRuleBlocks
:
{ before(grammarAccess.getBlocksRule()); }
	 ruleBlocks
{ after(grammarAccess.getBlocksRule()); } 
	 EOF 
;

// Rule Blocks
ruleBlocks 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlocksAccess().getAlternatives()); }
		(rule__Blocks__Alternatives)
		{ after(grammarAccess.getBlocksAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSection
entryRuleSection
:
{ before(grammarAccess.getSectionRule()); }
	 ruleSection
{ after(grammarAccess.getSectionRule()); } 
	 EOF 
;

// Rule Section
ruleSection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSectionAccess().getGroup()); }
		(rule__Section__Group__0)
		{ after(grammarAccess.getSectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubsection
entryRuleSubsection
:
{ before(grammarAccess.getSubsectionRule()); }
	 ruleSubsection
{ after(grammarAccess.getSubsectionRule()); } 
	 EOF 
;

// Rule Subsection
ruleSubsection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubsectionAccess().getGroup()); }
		(rule__Subsection__Group__0)
		{ after(grammarAccess.getSubsectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParagraph
entryRuleParagraph
:
{ before(grammarAccess.getParagraphRule()); }
	 ruleParagraph
{ after(grammarAccess.getParagraphRule()); } 
	 EOF 
;

// Rule Paragraph
ruleParagraph 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParagraphAccess().getGroup()); }
		(rule__Paragraph__Group__0)
		{ after(grammarAccess.getParagraphAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImage
entryRuleImage
:
{ before(grammarAccess.getImageRule()); }
	 ruleImage
{ after(grammarAccess.getImageRule()); } 
	 EOF 
;

// Rule Image
ruleImage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImageAccess().getGroup()); }
		(rule__Image__Group__0)
		{ after(grammarAccess.getImageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCodeBlock
entryRuleCodeBlock
:
{ before(grammarAccess.getCodeBlockRule()); }
	 ruleCodeBlock
{ after(grammarAccess.getCodeBlockRule()); } 
	 EOF 
;

// Rule CodeBlock
ruleCodeBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCodeBlockAccess().getGroup()); }
		(rule__CodeBlock__Group__0)
		{ after(grammarAccess.getCodeBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleItemize
entryRuleItemize
:
{ before(grammarAccess.getItemizeRule()); }
	 ruleItemize
{ after(grammarAccess.getItemizeRule()); } 
	 EOF 
;

// Rule Itemize
ruleItemize 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getItemizeAccess().getGroup()); }
		(rule__Itemize__Group__0)
		{ after(grammarAccess.getItemizeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListItem
entryRuleListItem
:
{ before(grammarAccess.getListItemRule()); }
	 ruleListItem
{ after(grammarAccess.getListItemRule()); } 
	 EOF 
;

// Rule ListItem
ruleListItem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListItemAccess().getGroup()); }
		(rule__ListItem__Group__0)
		{ after(grammarAccess.getListItemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInlineItem
entryRuleInlineItem
:
{ before(grammarAccess.getInlineItemRule()); }
	 ruleInlineItem
{ after(grammarAccess.getInlineItemRule()); } 
	 EOF 
;

// Rule InlineItem
ruleInlineItem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInlineItemAccess().getAlternatives()); }
		(rule__InlineItem__Alternatives)
		{ after(grammarAccess.getInlineItemAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNormal
entryRuleNormal
:
{ before(grammarAccess.getNormalRule()); }
	 ruleNormal
{ after(grammarAccess.getNormalRule()); } 
	 EOF 
;

// Rule Normal
ruleNormal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNormalAccess().getGroup()); }
		(rule__Normal__Group__0)
		{ after(grammarAccess.getNormalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBold
entryRuleBold
:
{ before(grammarAccess.getBoldRule()); }
	 ruleBold
{ after(grammarAccess.getBoldRule()); } 
	 EOF 
;

// Rule Bold
ruleBold 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoldAccess().getGroup()); }
		(rule__Bold__Group__0)
		{ after(grammarAccess.getBoldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleItalic
entryRuleItalic
:
{ before(grammarAccess.getItalicRule()); }
	 ruleItalic
{ after(grammarAccess.getItalicRule()); } 
	 EOF 
;

// Rule Italic
ruleItalic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getItalicAccess().getGroup()); }
		(rule__Italic__Group__0)
		{ after(grammarAccess.getItalicAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLink
entryRuleLink
:
{ before(grammarAccess.getLinkRule()); }
	 ruleLink
{ after(grammarAccess.getLinkRule()); } 
	 EOF 
;

// Rule Link
ruleLink 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLinkAccess().getGroup()); }
		(rule__Link__Group__0)
		{ after(grammarAccess.getLinkAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Blocks__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlocksAccess().getSectionParserRuleCall_0()); }
		ruleSection
		{ after(grammarAccess.getBlocksAccess().getSectionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBlocksAccess().getSubsectionParserRuleCall_1()); }
		ruleSubsection
		{ after(grammarAccess.getBlocksAccess().getSubsectionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBlocksAccess().getParagraphParserRuleCall_2()); }
		ruleParagraph
		{ after(grammarAccess.getBlocksAccess().getParagraphParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getBlocksAccess().getImageParserRuleCall_3()); }
		ruleImage
		{ after(grammarAccess.getBlocksAccess().getImageParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getBlocksAccess().getCodeBlockParserRuleCall_4()); }
		ruleCodeBlock
		{ after(grammarAccess.getBlocksAccess().getCodeBlockParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getBlocksAccess().getItemizeParserRuleCall_5()); }
		ruleItemize
		{ after(grammarAccess.getBlocksAccess().getItemizeParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InlineItem__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInlineItemAccess().getNormalParserRuleCall_0()); }
		ruleNormal
		{ after(grammarAccess.getInlineItemAccess().getNormalParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInlineItemAccess().getBoldParserRuleCall_1()); }
		ruleBold
		{ after(grammarAccess.getInlineItemAccess().getBoldParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getInlineItemAccess().getItalicParserRuleCall_2()); }
		ruleItalic
		{ after(grammarAccess.getInlineItemAccess().getItalicParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getInlineItemAccess().getLinkParserRuleCall_3()); }
		ruleLink
		{ after(grammarAccess.getInlineItemAccess().getLinkParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Document__Group__0__Impl
	rule__Document__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentAccess().getDocKeyword_0()); }
	'doc'
	{ after(grammarAccess.getDocumentAccess().getDocKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Document__Group__1__Impl
	rule__Document__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getDocumentAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Document__Group__2__Impl
	rule__Document__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentAccess().getTitleKeyword_2()); }
	'title:'
	{ after(grammarAccess.getDocumentAccess().getTitleKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Document__Group__3__Impl
	rule__Document__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentAccess().getTitleAssignment_3()); }
	(rule__Document__TitleAssignment_3)
	{ after(grammarAccess.getDocumentAccess().getTitleAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Document__Group__4__Impl
	rule__Document__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentAccess().getAuthorKeyword_4()); }
	'author:'
	{ after(grammarAccess.getDocumentAccess().getAuthorKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Document__Group__5__Impl
	rule__Document__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentAccess().getAuthorAssignment_5()); }
	(rule__Document__AuthorAssignment_5)
	{ after(grammarAccess.getDocumentAccess().getAuthorAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Document__Group__6__Impl
	rule__Document__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentAccess().getDateKeyword_6()); }
	'date:'
	{ after(grammarAccess.getDocumentAccess().getDateKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Document__Group__7__Impl
	rule__Document__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentAccess().getDatetimeAssignment_7()); }
	(rule__Document__DatetimeAssignment_7)
	{ after(grammarAccess.getDocumentAccess().getDatetimeAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Document__Group__8__Impl
	rule__Document__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentAccess().getTldrKeyword_8()); }
	'tldr:'
	{ after(grammarAccess.getDocumentAccess().getTldrKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Document__Group__9__Impl
	rule__Document__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentAccess().getTldrAssignment_9()); }
	(rule__Document__TldrAssignment_9)
	{ after(grammarAccess.getDocumentAccess().getTldrAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Document__Group__10__Impl
	rule__Document__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentAccess().getBlocksAssignment_10()); }
	(rule__Document__BlocksAssignment_10)*
	{ after(grammarAccess.getDocumentAccess().getBlocksAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Document__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentAccess().getRightCurlyBracketKeyword_11()); }
	'}'
	{ after(grammarAccess.getDocumentAccess().getRightCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Section__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__0__Impl
	rule__Section__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getSectionKeyword_0()); }
	'+section'
	{ after(grammarAccess.getSectionAccess().getSectionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__1__Impl
	rule__Section__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getTitleAssignment_1()); }
	(rule__Section__TitleAssignment_1)
	{ after(grammarAccess.getSectionAccess().getTitleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getBlocksAssignment_2()); }
	(rule__Section__BlocksAssignment_2)*
	{ after(grammarAccess.getSectionAccess().getBlocksAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Subsection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subsection__Group__0__Impl
	rule__Subsection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsectionAccess().getSubKeyword_0()); }
	'+sub'
	{ after(grammarAccess.getSubsectionAccess().getSubKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subsection__Group__1__Impl
	rule__Subsection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsectionAccess().getTitleAssignment_1()); }
	(rule__Subsection__TitleAssignment_1)
	{ after(grammarAccess.getSubsectionAccess().getTitleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subsection__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsectionAccess().getBlocksAssignment_2()); }
	(rule__Subsection__BlocksAssignment_2)*
	{ after(grammarAccess.getSubsectionAccess().getBlocksAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Paragraph__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Paragraph__Group__0__Impl
	rule__Paragraph__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParagraphAccess().getPKeyword_0()); }
	'+p'
	{ after(grammarAccess.getParagraphAccess().getPKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Paragraph__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getParagraphAccess().getInlineitemsAssignment_1()); }
		(rule__Paragraph__InlineitemsAssignment_1)
		{ after(grammarAccess.getParagraphAccess().getInlineitemsAssignment_1()); }
	)
	(
		{ before(grammarAccess.getParagraphAccess().getInlineitemsAssignment_1()); }
		(rule__Paragraph__InlineitemsAssignment_1)*
		{ after(grammarAccess.getParagraphAccess().getInlineitemsAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Image__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group__0__Impl
	rule__Image__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getImgKeyword_0()); }
	'+img'
	{ after(grammarAccess.getImageAccess().getImgKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group__1__Impl
	rule__Image__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getImageAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group__2__Impl
	rule__Image__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getUrlKeyword_2()); }
	'url:'
	{ after(grammarAccess.getImageAccess().getUrlKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group__3__Impl
	rule__Image__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getUrlAssignment_3()); }
	(rule__Image__UrlAssignment_3)
	{ after(grammarAccess.getImageAccess().getUrlAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group__4__Impl
	rule__Image__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getWidthKeyword_4()); }
	'width:'
	{ after(grammarAccess.getImageAccess().getWidthKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group__5__Impl
	rule__Image__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getWidthAssignment_5()); }
	(rule__Image__WidthAssignment_5)
	{ after(grammarAccess.getImageAccess().getWidthAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group__6__Impl
	rule__Image__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getHeightKeyword_6()); }
	'height:'
	{ after(grammarAccess.getImageAccess().getHeightKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group__7__Impl
	rule__Image__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getHeightAssignment_7()); }
	(rule__Image__HeightAssignment_7)
	{ after(grammarAccess.getImageAccess().getHeightAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group__8__Impl
	rule__Image__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getGroup_8()); }
	(rule__Image__Group_8__0)?
	{ after(grammarAccess.getImageAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getImageAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Image__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group_8__0__Impl
	rule__Image__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getCaptionKeyword_8_0()); }
	'caption:'
	{ after(grammarAccess.getImageAccess().getCaptionKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getCaptionAssignment_8_1()); }
	(rule__Image__CaptionAssignment_8_1)
	{ after(grammarAccess.getImageAccess().getCaptionAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CodeBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group__0__Impl
	rule__CodeBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getCodeKeyword_0()); }
	'+code'
	{ after(grammarAccess.getCodeBlockAccess().getCodeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group__1__Impl
	rule__CodeBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getCodeBlockAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group__2__Impl
	rule__CodeBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getLanguageKeyword_2()); }
	'language:'
	{ after(grammarAccess.getCodeBlockAccess().getLanguageKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group__3__Impl
	rule__CodeBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getLanguageAssignment_3()); }
	(rule__CodeBlock__LanguageAssignment_3)
	{ after(grammarAccess.getCodeBlockAccess().getLanguageAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group__4__Impl
	rule__CodeBlock__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getTextKeyword_4()); }
	'text:'
	{ after(grammarAccess.getCodeBlockAccess().getTextKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group__5__Impl
	rule__CodeBlock__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getTextAssignment_5()); }
	(rule__CodeBlock__TextAssignment_5)
	{ after(grammarAccess.getCodeBlockAccess().getTextAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CodeBlock__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCodeBlockAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getCodeBlockAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Itemize__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Itemize__Group__0__Impl
	rule__Itemize__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Itemize__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemizeAccess().getListKeyword_0()); }
	'+list'
	{ after(grammarAccess.getItemizeAccess().getListKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Itemize__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Itemize__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Itemize__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getItemizeAccess().getItemsAssignment_1()); }
		(rule__Itemize__ItemsAssignment_1)
		{ after(grammarAccess.getItemizeAccess().getItemsAssignment_1()); }
	)
	(
		{ before(grammarAccess.getItemizeAccess().getItemsAssignment_1()); }
		(rule__Itemize__ItemsAssignment_1)*
		{ after(grammarAccess.getItemizeAccess().getItemsAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListItem__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListItem__Group__0__Impl
	rule__ListItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListItem__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListItemAccess().getHyphenMinusKeyword_0()); }
	'-'
	{ after(grammarAccess.getListItemAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListItem__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListItem__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListItem__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListItemAccess().getInlineAssignment_1()); }
	(rule__ListItem__InlineAssignment_1)
	{ after(grammarAccess.getListItemAccess().getInlineAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Normal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Normal__Group__0__Impl
	rule__Normal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Normal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNormalAccess().getAsteriskKeyword_0()); }
	'*'
	{ after(grammarAccess.getNormalAccess().getAsteriskKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Normal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Normal__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Normal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNormalAccess().getTextAssignment_1()); }
	(rule__Normal__TextAssignment_1)
	{ after(grammarAccess.getNormalAccess().getTextAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Bold__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bold__Group__0__Impl
	rule__Bold__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bold__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoldAccess().getBoldKeyword_0()); }
	'~bold'
	{ after(grammarAccess.getBoldAccess().getBoldKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bold__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bold__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bold__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoldAccess().getTextAssignment_1()); }
	(rule__Bold__TextAssignment_1)
	{ after(grammarAccess.getBoldAccess().getTextAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Italic__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Italic__Group__0__Impl
	rule__Italic__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Italic__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItalicAccess().getItalicKeyword_0()); }
	'~italic'
	{ after(grammarAccess.getItalicAccess().getItalicKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Italic__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Italic__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Italic__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItalicAccess().getTextAssignment_1()); }
	(rule__Italic__TextAssignment_1)
	{ after(grammarAccess.getItalicAccess().getTextAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Link__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__0__Impl
	rule__Link__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getLinkKeyword_0()); }
	'~link'
	{ after(grammarAccess.getLinkAccess().getLinkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__1__Impl
	rule__Link__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getLinkAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__2__Impl
	rule__Link__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getUrlKeyword_2()); }
	'url:'
	{ after(grammarAccess.getLinkAccess().getUrlKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__3__Impl
	rule__Link__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getUrlAssignment_3()); }
	(rule__Link__UrlAssignment_3)
	{ after(grammarAccess.getLinkAccess().getUrlAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__4__Impl
	rule__Link__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getTextKeyword_4()); }
	'text:'
	{ after(grammarAccess.getLinkAccess().getTextKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__5__Impl
	rule__Link__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getTextAssignment_5()); }
	(rule__Link__TextAssignment_5)
	{ after(grammarAccess.getLinkAccess().getTextAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Link__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLinkAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getLinkAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Document__TitleAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDocumentAccess().getTitleSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getDocumentAccess().getTitleSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__AuthorAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDocumentAccess().getAuthorSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getDocumentAccess().getAuthorSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__DatetimeAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDocumentAccess().getDatetimeDATETerminalRuleCall_7_0()); }
		RULE_DATE
		{ after(grammarAccess.getDocumentAccess().getDatetimeDATETerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__TldrAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDocumentAccess().getTldrSTRINGTerminalRuleCall_9_0()); }
		RULE_STRING
		{ after(grammarAccess.getDocumentAccess().getTldrSTRINGTerminalRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__BlocksAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDocumentAccess().getBlocksBlocksParserRuleCall_10_0()); }
		ruleBlocks
		{ after(grammarAccess.getDocumentAccess().getBlocksBlocksParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__TitleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSectionAccess().getTitleSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getSectionAccess().getTitleSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__BlocksAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSectionAccess().getBlocksBlocksParserRuleCall_2_0()); }
		ruleBlocks
		{ after(grammarAccess.getSectionAccess().getBlocksBlocksParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsection__TitleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubsectionAccess().getTitleSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getSubsectionAccess().getTitleSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subsection__BlocksAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubsectionAccess().getBlocksBlocksParserRuleCall_2_0()); }
		ruleBlocks
		{ after(grammarAccess.getSubsectionAccess().getBlocksBlocksParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__InlineitemsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParagraphAccess().getInlineitemsInlineItemParserRuleCall_1_0()); }
		ruleInlineItem
		{ after(grammarAccess.getParagraphAccess().getInlineitemsInlineItemParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__UrlAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageAccess().getUrlSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getImageAccess().getUrlSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__WidthAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageAccess().getWidthINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getImageAccess().getWidthINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__HeightAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageAccess().getHeightINTTerminalRuleCall_7_0()); }
		RULE_INT
		{ after(grammarAccess.getImageAccess().getHeightINTTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__CaptionAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageAccess().getCaptionSTRINGTerminalRuleCall_8_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getImageAccess().getCaptionSTRINGTerminalRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__LanguageAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCodeBlockAccess().getLanguageSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getCodeBlockAccess().getLanguageSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CodeBlock__TextAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCodeBlockAccess().getTextSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getCodeBlockAccess().getTextSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Itemize__ItemsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemizeAccess().getItemsListItemParserRuleCall_1_0()); }
		ruleListItem
		{ after(grammarAccess.getItemizeAccess().getItemsListItemParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListItem__InlineAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListItemAccess().getInlineInlineItemParserRuleCall_1_0()); }
		ruleInlineItem
		{ after(grammarAccess.getListItemAccess().getInlineInlineItemParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Normal__TextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNormalAccess().getTextSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getNormalAccess().getTextSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bold__TextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoldAccess().getTextSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getBoldAccess().getTextSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Italic__TextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItalicAccess().getTextSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getItalicAccess().getTextSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__UrlAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getUrlSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getLinkAccess().getUrlSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Link__TextAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLinkAccess().getTextSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getLinkAccess().getTextSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_DATE : '"' '0'..'9' '0'..'9' '-' '0'..'9' ('0'..'9')+ '-' '0'..'9' '0'..'9' '0'..'9' '0'..'9' '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
