package adrf.xtext.generator;

import adrf.xtext.typoDSL.Blocks;
import adrf.xtext.typoDSL.Bold;
import adrf.xtext.typoDSL.CodeBlock;
import adrf.xtext.typoDSL.Document;
import adrf.xtext.typoDSL.Image;
import adrf.xtext.typoDSL.InlineItem;
import adrf.xtext.typoDSL.Italic;
import adrf.xtext.typoDSL.Itemize;
import adrf.xtext.typoDSL.Link;
import adrf.xtext.typoDSL.ListItem;
import adrf.xtext.typoDSL.Normal;
import adrf.xtext.typoDSL.Paragraph;
import adrf.xtext.typoDSL.Section;
import adrf.xtext.typoDSL.Subsection;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.IterableExtensions;

/**
 * Generates HTML code from your model files on save.
 */
@SuppressWarnings("all")
public class TypoHTMLGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    String _className = this.className(resource);
    String _plus = (_className + ".html");
    EObject _head = IterableExtensions.<EObject>head(resource.getContents());
    fsa.generateFile(_plus, 
      this.toHtml(((Document) _head)));
  }

  public CharSequence toHtml(final Document document) {
    StringConcatenation _builder = new StringConcatenation();
    CharSequence _head = this.getHead(document);
    _builder.append(_head);
    _builder.newLineIfNotEmpty();
    CharSequence _body = this.getBody(document);
    _builder.append(_body);
    _builder.newLineIfNotEmpty();
    return _builder;
  }

  public CharSequence getHead(final Document document) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<!DOCTYPE html>");
    _builder.newLine();
    _builder.append("<html lang=\"en\">");
    _builder.newLine();
    _builder.append("<head>");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<meta charset=\"UTF-8\">");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<title>");
    String _title = document.getTitle();
    _builder.append(_title, "    ");
    _builder.append("</title>");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("<!-- Inter font from Google Fonts -->");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\" rel=\"stylesheet\">");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<!-- Syntax highlighting with Prism.js -->");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<link href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism-tomorrow.min.css\" rel=\"stylesheet\" />");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<!-- HTML to PDF library -->");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js\"></script>");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<style>");
    _builder.newLine();
    _builder.append("        ");
    _builder.append(":root {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("--background: #ffffff;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("--foreground: #09090b;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("--primary: #8b5cf6;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("--primary-hover: #7c3aed;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("--muted: #f4f4f5;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("--muted-foreground: #71717a;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("--border: #e4e4e7;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("[data-theme=\"dark\"] {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("--background: #09090b;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("--foreground: #ffffff;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("--primary: #a78bfa;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("--primary-hover: #8b5cf6;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("--muted: #27272a;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("--muted-foreground: #a1a1aa;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("--border: #27272a;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("* {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("margin: 0;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("padding: 0;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("box-sizing: border-box;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("transition: background-color 0.3s ease, color 0.3s ease;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("body {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("font-family: \'Inter\', sans-serif;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("line-height: 1.6;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("color: var(--foreground);");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("background-color: var(--background);");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append(".container {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("max-width: 768px;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("margin: 0 auto;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("padding: 2rem;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append(".theme-switch {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("position: fixed;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("top: 1rem;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("right: 1rem;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("background: var(--muted);");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("border: 1px solid var(--border);");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("padding: 0.5rem 1rem;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("border-radius: 0.5rem;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("cursor: pointer;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("color: var(--foreground);");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("font-size: 0.875rem;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("display: flex;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("align-items: center;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("gap: 0.5rem;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append(".theme-switch:hover {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("background: var(--primary);");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("color: white;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append(".download-pdf {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("position: fixed;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("top: 1rem;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("right: 8rem;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("background: var(--primary);");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("color: white;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("border: none;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("padding: 0.5rem 1rem;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("border-radius: 0.5rem;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("cursor: pointer;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("font-size: 0.875rem;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("display: flex;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("align-items: center;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("gap: 0.5rem;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("font-family: \'Inter\', sans-serif;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append(".download-pdf:hover {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("background: var(--primary-hover);");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("@media (max-width: 640px) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append(".download-pdf {");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("top: 4rem;");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("right: 1rem;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append(".header {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("margin-bottom: 3rem;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append(".title {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("font-size: 2.5rem;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("font-weight: 700;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("margin-bottom: 1rem;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("line-height: 1.2;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append(".metadata {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("color: var(--muted-foreground);");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("font-size: 0.875rem;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("margin-bottom: 1.5rem;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append(".tldr {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("background: var(--muted);");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("padding: 1.5rem;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("border-radius: 0.5rem;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("margin-bottom: 2rem;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append(".tldr h2 {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("font-size: 1.25rem;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("margin-bottom: 0.5rem;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("font-weight: 600;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append(".section {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("margin-bottom: 2.5rem;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append(".section h2 {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("font-size: 1.875rem;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("font-weight: 700;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("margin-bottom: 1rem;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append(".subsection {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("margin-bottom: 2rem;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append(".subsection h3 {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("font-size: 1.5rem;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("font-weight: 600;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("margin-bottom: 1rem;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append(".paragraph {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("margin-bottom: 1.5rem;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append(".image-container {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("margin: 2rem 0;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append(".image-container img {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("max-width: 100%;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("border-radius: 0.5rem;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("border: 1px solid var(--border);");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append(".image-caption {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("color: var(--muted-foreground);");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("font-size: 0.875rem;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("text-align: center;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("margin-top: 0.5rem;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append(".code-block {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("margin: 1.5rem 0;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("background: var(--muted);");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("border-radius: 0.5rem;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("overflow: hidden;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append(".itemize {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("list-style-type: none;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("margin: 1.5rem 0;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append(".itemize li {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("position: relative;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("padding-left: 1.5rem;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("margin-bottom: 0.75rem;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append(".itemize li::before {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("content: \"•\";");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("color: var(--primary);");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("position: absolute;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("left: 0;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("font-weight: bold;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("        ");
    _builder.newLine();
    _builder.append("        ");
    _builder.append(".centered {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("display: flex;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("flex-direction: column;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("align-items: center;");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("</style>");
    _builder.newLine();
    _builder.append("</head>");
    _builder.newLine();
    return _builder;
  }

  public CharSequence getBody(final Document document) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<body>");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<button class=\"theme-switch\" onclick=\"toggleTheme()\">");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("<span class=\"theme-icon\">\ud83c\udf19</span>");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("</button>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("<button class=\"download-pdf\" onclick=\"generatePDF()\">");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("<span>\ud83d\udcd1</span>");
    _builder.newLine();
    _builder.append("\t        ");
    _builder.append("<span>Download</span>");
    _builder.newLine();
    _builder.append("\t    ");
    _builder.append("</button>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<div class=\"container\">");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("<header class=\"header\">");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("<h1 class=\"title\">");
    String _title = document.getTitle();
    _builder.append(_title, "            ");
    _builder.append("</h1>");
    _builder.newLineIfNotEmpty();
    _builder.append("            ");
    _builder.append("<div class=\"metadata\">");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<span class=\"author\">By ");
    String _author = document.getAuthor();
    _builder.append(_author, "                ");
    _builder.append("</span> •");
    _builder.newLineIfNotEmpty();
    _builder.append("                ");
    _builder.append("<span class=\"date\">");
    String _replace = document.getDatetime().replace("\"", "");
    _builder.append(_replace, "                ");
    _builder.append("</span>");
    _builder.newLineIfNotEmpty();
    _builder.append("            ");
    _builder.append("</div>");
    _builder.newLine();
    {
      String _tldr = document.getTldr();
      boolean _tripleNotEquals = (_tldr != null);
      if (_tripleNotEquals) {
        _builder.append("            ");
        _builder.append("<div class=\"tldr\">");
        _builder.newLine();
        _builder.append("            ");
        _builder.append("    ");
        _builder.append("<h2>TL;DR</h2>");
        _builder.newLine();
        _builder.append("            ");
        _builder.append("    ");
        _builder.append("<p>");
        String _escapeHtml = this.escapeHtml(document.getTldr());
        _builder.append(_escapeHtml, "                ");
        _builder.append("</p>");
        _builder.newLineIfNotEmpty();
        _builder.append("            ");
        _builder.append("</div>");
        _builder.newLine();
      }
    }
    _builder.append("        ");
    _builder.append("</header>");
    _builder.newLine();
    _builder.append("        ");
    String _renderBlocks = this.renderBlocks(document);
    _builder.append(_renderBlocks, "        ");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("</div>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<!-- Prism.js for syntax highlighting -->");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js\"></script>");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-javascript.min.js\"></script>");
    _builder.newLine();
    _builder.append("    ");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<script>");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("function toggleTheme() {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("const body = document.body;");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("const currentTheme = body.getAttribute(\'data-theme\');");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("const newTheme = currentTheme === \'dark\' ? \'light\' : \'dark\';");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("body.setAttribute(\'data-theme\', newTheme);");
    _builder.newLine();
    _builder.append("            ");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("const themeIcon = document.querySelector(\'.theme-icon\');");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("themeIcon.textContent = newTheme === \'dark\' ? \'☀️\' : \'\ud83c\udf19\';");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("// Set initial theme based on user preference");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("if (window.matchMedia(\'(prefers-color-scheme: dark)\').matches) {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("document.body.setAttribute(\'data-theme\', \'dark\');");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("document.querySelector(\'.theme-icon\').textContent = \'☀️\';");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("        ");
    _builder.append("function generatePDF() {");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("// Get the container element");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("const element = document.querySelector(\'.container\');");
    _builder.newLine();
    _builder.append("            ");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("// Configure the PDF options");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("const opt = {");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("margin: [10, 10],");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("filename: \'blog-post.pdf\',");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("image: { type: \'jpeg\', quality: 0.98 },");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("html2canvas: { scale: 2 },");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("jsPDF: { unit: \'mm\', format: \'a4\', orientation: \'portrait\' }");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("};");
    _builder.newLine();
    _builder.newLine();
    _builder.append("            ");
    _builder.append("// Generate the PDF");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("html2pdf().set(opt).from(element).save();");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("</script>");
    _builder.newLine();
    _builder.append("</body>");
    _builder.newLine();
    _builder.append("</html>");
    _builder.newLine();
    return _builder;
  }

  public String renderBlocks(final Document document) {
    String res = "";
    EList<Blocks> _blocks = document.getBlocks();
    for (final Blocks block : _blocks) {
      String _res = res;
      String _renderBlock = this.renderBlock(block);
      res = (_res + _renderBlock);
    }
    return res;
  }

  public String renderBlock(final Blocks block) {
    String res = "";
    String className = block.eClass().getName();
    if (className != null) {
      switch (className) {
        case "Section":
          String _res = res;
          CharSequence _renderBlock = this.renderBlock(((Section) block));
          res = (_res + _renderBlock);
          break;
        case "Subsection":
          String _res_1 = res;
          CharSequence _renderBlock_1 = this.renderBlock(((Subsection) block));
          res = (_res_1 + _renderBlock_1);
          break;
        case "Paragraph":
          String _res_2 = res;
          CharSequence _renderBlock_2 = this.renderBlock(((Paragraph) block));
          res = (_res_2 + _renderBlock_2);
          break;
        case "Image":
          String _res_3 = res;
          CharSequence _renderBlock_3 = this.renderBlock(((Image) block));
          res = (_res_3 + _renderBlock_3);
          break;
        case "CodeBlock":
          String _res_4 = res;
          CharSequence _renderBlock_4 = this.renderBlock(((CodeBlock) block));
          res = (_res_4 + _renderBlock_4);
          break;
        case "Itemize":
          String _res_5 = res;
          CharSequence _renderBlock_5 = this.renderBlock(((Itemize) block));
          res = (_res_5 + _renderBlock_5);
          break;
        default:
          System.err.println(("Error rendering the block" + block));
          break;
      }
    } else {
      System.err.println(("Error rendering the block" + block));
    }
    String _res_6 = res;
    res = (_res_6 + "\n");
    return res;
  }

  public CharSequence renderBlock(final Section section) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<div class=\"section\">");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<h2>");
    String _escapeHtml = this.escapeHtml(section.getTitle());
    _builder.append(_escapeHtml, "    ");
    _builder.append("</h2>");
    _builder.newLineIfNotEmpty();
    {
      EList<Blocks> _blocks = section.getBlocks();
      for(final Blocks b : _blocks) {
        _builder.append("    ");
        Object _renderBlock = this.renderBlock(b);
        _builder.append(_renderBlock, "    ");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("</div>");
    _builder.newLine();
    return _builder;
  }

  public CharSequence renderBlock(final Subsection subsection) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<div class=\"subsection\">");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<h3>");
    String _escapeHtml = this.escapeHtml(subsection.getTitle());
    _builder.append(_escapeHtml, "    ");
    _builder.append("</h3>");
    _builder.newLineIfNotEmpty();
    {
      EList<Blocks> _blocks = subsection.getBlocks();
      for(final Blocks b : _blocks) {
        _builder.append("    ");
        Object _renderBlock = this.renderBlock(b);
        _builder.append(_renderBlock, "    ");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("</div>");
    _builder.newLine();
    return _builder;
  }

  public CharSequence renderBlock(final Paragraph paragraph) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<p class=\"paragraph\">");
    _builder.newLine();
    {
      EList<InlineItem> _inlineitems = paragraph.getInlineitems();
      for(final InlineItem item : _inlineitems) {
        _builder.append("    ");
        String _renderInline = this.renderInline(item);
        _builder.append(_renderInline, "    ");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("</p>");
    _builder.newLine();
    return _builder;
  }

  public CharSequence renderBlock(final Image image) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<div class=\"image-container centered\">");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<img src=\"");
    String _url = image.getUrl();
    _builder.append(_url, "    ");
    _builder.append("\" alt=\"");
    String _escapeHtml = this.escapeHtml(image.getCaption());
    _builder.append(_escapeHtml, "    ");
    _builder.append("\" />");
    _builder.newLineIfNotEmpty();
    _builder.append("    ");
    _builder.append("<div class=\"image-caption\">");
    String _escapeHtml_1 = this.escapeHtml(image.getCaption());
    _builder.append(_escapeHtml_1, "    ");
    _builder.append("</div>");
    _builder.newLineIfNotEmpty();
    _builder.append("</div>");
    _builder.newLine();
    return _builder;
  }

  public CharSequence renderBlock(final CodeBlock codeBlock) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<div class=\"code-block\">");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<pre><code class=\"language-");
    String _language = codeBlock.getLanguage();
    _builder.append(_language, "    ");
    _builder.append("\">");
    String _escapeHtml = this.escapeHtml(codeBlock.getText());
    _builder.append(_escapeHtml, "    ");
    _builder.append("</code></pre>");
    _builder.newLineIfNotEmpty();
    _builder.append("</div>");
    _builder.newLine();
    return _builder;
  }

  public CharSequence renderBlock(final Itemize itemize) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<ul class=\"itemize\">");
    _builder.newLine();
    {
      EList<ListItem> _items = itemize.getItems();
      for(final ListItem item : _items) {
        _builder.append("    ");
        _builder.append("<li>");
        {
          EList<InlineItem> _inline = item.getInline();
          for(final InlineItem inline : _inline) {
            String _renderInline = this.renderInline(inline);
            _builder.append(_renderInline, "    ");
          }
        }
        _builder.append("</li>");
        _builder.newLineIfNotEmpty();
      }
    }
    _builder.append("</ul>");
    _builder.newLine();
    return _builder;
  }

  public String renderInline(final InlineItem inline) {
    String res = "";
    String className = inline.eClass().getName();
    if (className != null) {
      switch (className) {
        case "Normal":
          Normal normal = ((Normal) inline);
          String _res = res;
          String _escapeHtml = this.escapeHtml(normal.getText());
          res = (_res + _escapeHtml);
          break;
        case "Bold":
          Bold bold = ((Bold) inline);
          String _res_1 = res;
          String _escapeHtml_1 = this.escapeHtml(bold.getText());
          String _plus = ("<strong>" + _escapeHtml_1);
          String _plus_1 = (_plus + "</strong>");
          res = (_res_1 + _plus_1);
          break;
        case "Italic":
          Italic italic = ((Italic) inline);
          String _res_2 = res;
          String _escapeHtml_2 = this.escapeHtml(italic.getText());
          String _plus_2 = ("<em>" + _escapeHtml_2);
          String _plus_3 = (_plus_2 + "</em>");
          res = (_res_2 + _plus_3);
          break;
        case "Link":
          Link link = ((Link) inline);
          String _res_3 = res;
          String _url = link.getUrl();
          String _plus_4 = ("<a href=\"" + _url);
          String _plus_5 = (_plus_4 + "\" target=\"_blank\" rel=\"noopener\">");
          String _escapeHtml_3 = this.escapeHtml(link.getText());
          String _plus_6 = (_plus_5 + _escapeHtml_3);
          String _plus_7 = (_plus_6 + "</a>");
          res = (_res_3 + _plus_7);
          break;
        default:
          String _res_4 = res;
          String _escapeHtml_4 = this.escapeHtml(inline.getText());
          res = (_res_4 + _escapeHtml_4);
          break;
      }
    } else {
      String _res_4 = res;
      String _escapeHtml_4 = this.escapeHtml(inline.getText());
      res = (_res_4 + _escapeHtml_4);
    }
    return res;
  }

  public String className(final Resource res) {
    String name = res.getURI().lastSegment();
    return name.substring(0, name.indexOf("."));
  }

  public String escapeHtml(final String s) {
    return s.replace("&", "&amp;").replace("<", "&lt;").replace(">", "&gt;");
  }
}
