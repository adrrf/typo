/*
 * generated by Xtext 2.30.0
 */
package adrf.xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class TypoDSLGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class DocumentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "adrf.xtext.TypoDSL.Document");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDocKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTitleKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTitleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTitleSTRINGTerminalRuleCall_3_0 = (RuleCall)cTitleAssignment_3.eContents().get(0);
		private final Keyword cAuthorKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAuthorAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAuthorSTRINGTerminalRuleCall_5_0 = (RuleCall)cAuthorAssignment_5.eContents().get(0);
		private final Keyword cDateKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cDatetimeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDatetimeDATETerminalRuleCall_7_0 = (RuleCall)cDatetimeAssignment_7.eContents().get(0);
		private final Keyword cTldrKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cTldrAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cTldrSTRINGTerminalRuleCall_9_0 = (RuleCall)cTldrAssignment_9.eContents().get(0);
		private final Assignment cBlocksAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cBlocksBlocksParserRuleCall_10_0 = (RuleCall)cBlocksAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Document:
		//  'doc' '{'
		//    'title:' title=STRING
		//    'author:' author=STRING
		//    'date:' datetime=DATE
		//    'tldr:' tldr=STRING
		//    blocks+=Blocks*
		//  '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'doc' '{'
		//  'title:' title=STRING
		//  'author:' author=STRING
		//  'date:' datetime=DATE
		//  'tldr:' tldr=STRING
		//  blocks+=Blocks*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'doc'
		public Keyword getDocKeyword_0() { return cDocKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'title:'
		public Keyword getTitleKeyword_2() { return cTitleKeyword_2; }
		
		//title=STRING
		public Assignment getTitleAssignment_3() { return cTitleAssignment_3; }
		
		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_3_0() { return cTitleSTRINGTerminalRuleCall_3_0; }
		
		//'author:'
		public Keyword getAuthorKeyword_4() { return cAuthorKeyword_4; }
		
		//author=STRING
		public Assignment getAuthorAssignment_5() { return cAuthorAssignment_5; }
		
		//STRING
		public RuleCall getAuthorSTRINGTerminalRuleCall_5_0() { return cAuthorSTRINGTerminalRuleCall_5_0; }
		
		//'date:'
		public Keyword getDateKeyword_6() { return cDateKeyword_6; }
		
		//datetime=DATE
		public Assignment getDatetimeAssignment_7() { return cDatetimeAssignment_7; }
		
		//DATE
		public RuleCall getDatetimeDATETerminalRuleCall_7_0() { return cDatetimeDATETerminalRuleCall_7_0; }
		
		//'tldr:'
		public Keyword getTldrKeyword_8() { return cTldrKeyword_8; }
		
		//tldr=STRING
		public Assignment getTldrAssignment_9() { return cTldrAssignment_9; }
		
		//STRING
		public RuleCall getTldrSTRINGTerminalRuleCall_9_0() { return cTldrSTRINGTerminalRuleCall_9_0; }
		
		//blocks+=Blocks*
		public Assignment getBlocksAssignment_10() { return cBlocksAssignment_10; }
		
		//Blocks
		public RuleCall getBlocksBlocksParserRuleCall_10_0() { return cBlocksBlocksParserRuleCall_10_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class BlocksElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "adrf.xtext.TypoDSL.Blocks");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSectionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSubsectionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cParagraphParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cImageParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cCodeBlockParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cItemizeParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//Blocks:
		//    Section | Subsection | Paragraph | Image | CodeBlock | Itemize
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Section | Subsection | Paragraph | Image | CodeBlock | Itemize
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Section
		public RuleCall getSectionParserRuleCall_0() { return cSectionParserRuleCall_0; }
		
		//Subsection
		public RuleCall getSubsectionParserRuleCall_1() { return cSubsectionParserRuleCall_1; }
		
		//Paragraph
		public RuleCall getParagraphParserRuleCall_2() { return cParagraphParserRuleCall_2; }
		
		//Image
		public RuleCall getImageParserRuleCall_3() { return cImageParserRuleCall_3; }
		
		//CodeBlock
		public RuleCall getCodeBlockParserRuleCall_4() { return cCodeBlockParserRuleCall_4; }
		
		//Itemize
		public RuleCall getItemizeParserRuleCall_5() { return cItemizeParserRuleCall_5; }
	}
	public class SectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "adrf.xtext.TypoDSL.Section");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSectionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTitleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTitleSTRINGTerminalRuleCall_1_0 = (RuleCall)cTitleAssignment_1.eContents().get(0);
		private final Assignment cBlocksAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cBlocksBlocksParserRuleCall_2_0 = (RuleCall)cBlocksAssignment_2.eContents().get(0);
		
		//Section:
		//    '+section' title=STRING
		//    blocks+=Blocks*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'+section' title=STRING
		//blocks+=Blocks*
		public Group getGroup() { return cGroup; }
		
		//'+section'
		public Keyword getSectionKeyword_0() { return cSectionKeyword_0; }
		
		//title=STRING
		public Assignment getTitleAssignment_1() { return cTitleAssignment_1; }
		
		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_1_0() { return cTitleSTRINGTerminalRuleCall_1_0; }
		
		//blocks+=Blocks*
		public Assignment getBlocksAssignment_2() { return cBlocksAssignment_2; }
		
		//Blocks
		public RuleCall getBlocksBlocksParserRuleCall_2_0() { return cBlocksBlocksParserRuleCall_2_0; }
	}
	public class SubsectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "adrf.xtext.TypoDSL.Subsection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSubKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTitleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTitleSTRINGTerminalRuleCall_1_0 = (RuleCall)cTitleAssignment_1.eContents().get(0);
		private final Assignment cBlocksAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cBlocksBlocksParserRuleCall_2_0 = (RuleCall)cBlocksAssignment_2.eContents().get(0);
		
		//Subsection:
		//    '+sub' title=STRING
		//    blocks+=Blocks*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'+sub' title=STRING
		//blocks+=Blocks*
		public Group getGroup() { return cGroup; }
		
		//'+sub'
		public Keyword getSubKeyword_0() { return cSubKeyword_0; }
		
		//title=STRING
		public Assignment getTitleAssignment_1() { return cTitleAssignment_1; }
		
		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_1_0() { return cTitleSTRINGTerminalRuleCall_1_0; }
		
		//blocks+=Blocks*
		public Assignment getBlocksAssignment_2() { return cBlocksAssignment_2; }
		
		//Blocks
		public RuleCall getBlocksBlocksParserRuleCall_2_0() { return cBlocksBlocksParserRuleCall_2_0; }
	}
	public class ParagraphElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "adrf.xtext.TypoDSL.Paragraph");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cInlineitemsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cInlineitemsInlineItemParserRuleCall_1_0 = (RuleCall)cInlineitemsAssignment_1.eContents().get(0);
		
		//Paragraph:
		//    '+p'
		//    inlineitems+=InlineItem+
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'+p'
		//inlineitems+=InlineItem+
		public Group getGroup() { return cGroup; }
		
		//'+p'
		public Keyword getPKeyword_0() { return cPKeyword_0; }
		
		//inlineitems+=InlineItem+
		public Assignment getInlineitemsAssignment_1() { return cInlineitemsAssignment_1; }
		
		//InlineItem
		public RuleCall getInlineitemsInlineItemParserRuleCall_1_0() { return cInlineitemsInlineItemParserRuleCall_1_0; }
	}
	public class ImageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "adrf.xtext.TypoDSL.Image");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImgKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cUrlKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cUrlAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cUrlSTRINGTerminalRuleCall_3_0 = (RuleCall)cUrlAssignment_3.eContents().get(0);
		private final Keyword cWidthKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cWidthAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cWidthINTTerminalRuleCall_5_0 = (RuleCall)cWidthAssignment_5.eContents().get(0);
		private final Keyword cHeightKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cHeightAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cHeightINTTerminalRuleCall_7_0 = (RuleCall)cHeightAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCaptionKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cCaptionAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cCaptionSTRINGTerminalRuleCall_8_1_0 = (RuleCall)cCaptionAssignment_8_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Image:
		//    '+img' '{'
		//      'url:' url=STRING
		//      'width:' width=INT
		//      'height:' height=INT
		//      ('caption:' caption=STRING)?
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'+img' '{'
		//  'url:' url=STRING
		//  'width:' width=INT
		//  'height:' height=INT
		//  ('caption:' caption=STRING)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'+img'
		public Keyword getImgKeyword_0() { return cImgKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'url:'
		public Keyword getUrlKeyword_2() { return cUrlKeyword_2; }
		
		//url=STRING
		public Assignment getUrlAssignment_3() { return cUrlAssignment_3; }
		
		//STRING
		public RuleCall getUrlSTRINGTerminalRuleCall_3_0() { return cUrlSTRINGTerminalRuleCall_3_0; }
		
		//'width:'
		public Keyword getWidthKeyword_4() { return cWidthKeyword_4; }
		
		//width=INT
		public Assignment getWidthAssignment_5() { return cWidthAssignment_5; }
		
		//INT
		public RuleCall getWidthINTTerminalRuleCall_5_0() { return cWidthINTTerminalRuleCall_5_0; }
		
		//'height:'
		public Keyword getHeightKeyword_6() { return cHeightKeyword_6; }
		
		//height=INT
		public Assignment getHeightAssignment_7() { return cHeightAssignment_7; }
		
		//INT
		public RuleCall getHeightINTTerminalRuleCall_7_0() { return cHeightINTTerminalRuleCall_7_0; }
		
		//('caption:' caption=STRING)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'caption:'
		public Keyword getCaptionKeyword_8_0() { return cCaptionKeyword_8_0; }
		
		//caption=STRING
		public Assignment getCaptionAssignment_8_1() { return cCaptionAssignment_8_1; }
		
		//STRING
		public RuleCall getCaptionSTRINGTerminalRuleCall_8_1_0() { return cCaptionSTRINGTerminalRuleCall_8_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class CodeBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "adrf.xtext.TypoDSL.CodeBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLanguageKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLanguageAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLanguageSTRINGTerminalRuleCall_3_0 = (RuleCall)cLanguageAssignment_3.eContents().get(0);
		private final Keyword cTextKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTextAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTextSTRINGTerminalRuleCall_5_0 = (RuleCall)cTextAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//CodeBlock:
		//    '+code' '{'
		//      'language:' language=STRING
		//      'text:' text=STRING
		//    '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'+code' '{'
		//  'language:' language=STRING
		//  'text:' text=STRING
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'+code'
		public Keyword getCodeKeyword_0() { return cCodeKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'language:'
		public Keyword getLanguageKeyword_2() { return cLanguageKeyword_2; }
		
		//language=STRING
		public Assignment getLanguageAssignment_3() { return cLanguageAssignment_3; }
		
		//STRING
		public RuleCall getLanguageSTRINGTerminalRuleCall_3_0() { return cLanguageSTRINGTerminalRuleCall_3_0; }
		
		//'text:'
		public Keyword getTextKeyword_4() { return cTextKeyword_4; }
		
		//text=STRING
		public Assignment getTextAssignment_5() { return cTextAssignment_5; }
		
		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_5_0() { return cTextSTRINGTerminalRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ItemizeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "adrf.xtext.TypoDSL.Itemize");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cItemsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cItemsListItemParserRuleCall_1_0 = (RuleCall)cItemsAssignment_1.eContents().get(0);
		
		//Itemize:
		//    '+list'
		//    items+=ListItem+
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'+list'
		//items+=ListItem+
		public Group getGroup() { return cGroup; }
		
		//'+list'
		public Keyword getListKeyword_0() { return cListKeyword_0; }
		
		//items+=ListItem+
		public Assignment getItemsAssignment_1() { return cItemsAssignment_1; }
		
		//ListItem
		public RuleCall getItemsListItemParserRuleCall_1_0() { return cItemsListItemParserRuleCall_1_0; }
	}
	public class ListItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "adrf.xtext.TypoDSL.ListItem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cInlineAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cInlineInlineItemParserRuleCall_1_0 = (RuleCall)cInlineAssignment_1.eContents().get(0);
		
		//ListItem:
		//    '-' inline+=InlineItem
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'-' inline+=InlineItem
		public Group getGroup() { return cGroup; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//inline+=InlineItem
		public Assignment getInlineAssignment_1() { return cInlineAssignment_1; }
		
		//InlineItem
		public RuleCall getInlineInlineItemParserRuleCall_1_0() { return cInlineInlineItemParserRuleCall_1_0; }
	}
	public class InlineItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "adrf.xtext.TypoDSL.InlineItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNormalParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBoldParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cItalicParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cLinkParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//InlineItem:
		//    Normal | Bold | Italic | Link
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Normal | Bold | Italic | Link
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Normal
		public RuleCall getNormalParserRuleCall_0() { return cNormalParserRuleCall_0; }
		
		//Bold
		public RuleCall getBoldParserRuleCall_1() { return cBoldParserRuleCall_1; }
		
		//Italic
		public RuleCall getItalicParserRuleCall_2() { return cItalicParserRuleCall_2; }
		
		//Link
		public RuleCall getLinkParserRuleCall_3() { return cLinkParserRuleCall_3; }
	}
	public class NormalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "adrf.xtext.TypoDSL.Normal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAsteriskKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTextAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTextSTRINGTerminalRuleCall_1_0 = (RuleCall)cTextAssignment_1.eContents().get(0);
		
		//Normal:
		//    '*' text=STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'*' text=STRING
		public Group getGroup() { return cGroup; }
		
		//'*'
		public Keyword getAsteriskKeyword_0() { return cAsteriskKeyword_0; }
		
		//text=STRING
		public Assignment getTextAssignment_1() { return cTextAssignment_1; }
		
		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_1_0() { return cTextSTRINGTerminalRuleCall_1_0; }
	}
	public class BoldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "adrf.xtext.TypoDSL.Bold");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBoldKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTextAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTextSTRINGTerminalRuleCall_1_0 = (RuleCall)cTextAssignment_1.eContents().get(0);
		
		//Bold:
		//    '~bold' text=STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'~bold' text=STRING
		public Group getGroup() { return cGroup; }
		
		//'~bold'
		public Keyword getBoldKeyword_0() { return cBoldKeyword_0; }
		
		//text=STRING
		public Assignment getTextAssignment_1() { return cTextAssignment_1; }
		
		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_1_0() { return cTextSTRINGTerminalRuleCall_1_0; }
	}
	public class ItalicElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "adrf.xtext.TypoDSL.Italic");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cItalicKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTextAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTextSTRINGTerminalRuleCall_1_0 = (RuleCall)cTextAssignment_1.eContents().get(0);
		
		//Italic:
		//    '~italic' text=STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'~italic' text=STRING
		public Group getGroup() { return cGroup; }
		
		//'~italic'
		public Keyword getItalicKeyword_0() { return cItalicKeyword_0; }
		
		//text=STRING
		public Assignment getTextAssignment_1() { return cTextAssignment_1; }
		
		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_1_0() { return cTextSTRINGTerminalRuleCall_1_0; }
	}
	public class LinkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "adrf.xtext.TypoDSL.Link");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLinkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cUrlKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cUrlAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cUrlSTRINGTerminalRuleCall_3_0 = (RuleCall)cUrlAssignment_3.eContents().get(0);
		private final Keyword cTextKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTextAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTextSTRINGTerminalRuleCall_5_0 = (RuleCall)cTextAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Link:
		//    '~link' '{' 'url:' url=STRING 'text:' text=STRING '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'~link' '{' 'url:' url=STRING 'text:' text=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'~link'
		public Keyword getLinkKeyword_0() { return cLinkKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'url:'
		public Keyword getUrlKeyword_2() { return cUrlKeyword_2; }
		
		//url=STRING
		public Assignment getUrlAssignment_3() { return cUrlAssignment_3; }
		
		//STRING
		public RuleCall getUrlSTRINGTerminalRuleCall_3_0() { return cUrlSTRINGTerminalRuleCall_3_0; }
		
		//'text:'
		public Keyword getTextKeyword_4() { return cTextKeyword_4; }
		
		//text=STRING
		public Assignment getTextAssignment_5() { return cTextAssignment_5; }
		
		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_5_0() { return cTextSTRINGTerminalRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	
	
	private final DocumentElements pDocument;
	private final BlocksElements pBlocks;
	private final SectionElements pSection;
	private final SubsectionElements pSubsection;
	private final ParagraphElements pParagraph;
	private final ImageElements pImage;
	private final CodeBlockElements pCodeBlock;
	private final ItemizeElements pItemize;
	private final ListItemElements pListItem;
	private final InlineItemElements pInlineItem;
	private final NormalElements pNormal;
	private final BoldElements pBold;
	private final ItalicElements pItalic;
	private final LinkElements pLink;
	private final TerminalRule tDATE;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public TypoDSLGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pDocument = new DocumentElements();
		this.pBlocks = new BlocksElements();
		this.pSection = new SectionElements();
		this.pSubsection = new SubsectionElements();
		this.pParagraph = new ParagraphElements();
		this.pImage = new ImageElements();
		this.pCodeBlock = new CodeBlockElements();
		this.pItemize = new ItemizeElements();
		this.pListItem = new ListItemElements();
		this.pInlineItem = new InlineItemElements();
		this.pNormal = new NormalElements();
		this.pBold = new BoldElements();
		this.pItalic = new ItalicElements();
		this.pLink = new LinkElements();
		this.tDATE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "adrf.xtext.TypoDSL.DATE");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("adrf.xtext.TypoDSL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Document:
	//  'doc' '{'
	//    'title:' title=STRING
	//    'author:' author=STRING
	//    'date:' datetime=DATE
	//    'tldr:' tldr=STRING
	//    blocks+=Blocks*
	//  '}'
	//;
	public DocumentElements getDocumentAccess() {
		return pDocument;
	}
	
	public ParserRule getDocumentRule() {
		return getDocumentAccess().getRule();
	}
	
	//Blocks:
	//    Section | Subsection | Paragraph | Image | CodeBlock | Itemize
	//;
	public BlocksElements getBlocksAccess() {
		return pBlocks;
	}
	
	public ParserRule getBlocksRule() {
		return getBlocksAccess().getRule();
	}
	
	//Section:
	//    '+section' title=STRING
	//    blocks+=Blocks*
	//;
	public SectionElements getSectionAccess() {
		return pSection;
	}
	
	public ParserRule getSectionRule() {
		return getSectionAccess().getRule();
	}
	
	//Subsection:
	//    '+sub' title=STRING
	//    blocks+=Blocks*
	//;
	public SubsectionElements getSubsectionAccess() {
		return pSubsection;
	}
	
	public ParserRule getSubsectionRule() {
		return getSubsectionAccess().getRule();
	}
	
	//Paragraph:
	//    '+p'
	//    inlineitems+=InlineItem+
	//;
	public ParagraphElements getParagraphAccess() {
		return pParagraph;
	}
	
	public ParserRule getParagraphRule() {
		return getParagraphAccess().getRule();
	}
	
	//Image:
	//    '+img' '{'
	//      'url:' url=STRING
	//      'width:' width=INT
	//      'height:' height=INT
	//      ('caption:' caption=STRING)?
	//    '}'
	//;
	public ImageElements getImageAccess() {
		return pImage;
	}
	
	public ParserRule getImageRule() {
		return getImageAccess().getRule();
	}
	
	//CodeBlock:
	//    '+code' '{'
	//      'language:' language=STRING
	//      'text:' text=STRING
	//    '}'
	//;
	public CodeBlockElements getCodeBlockAccess() {
		return pCodeBlock;
	}
	
	public ParserRule getCodeBlockRule() {
		return getCodeBlockAccess().getRule();
	}
	
	//Itemize:
	//    '+list'
	//    items+=ListItem+
	//;
	public ItemizeElements getItemizeAccess() {
		return pItemize;
	}
	
	public ParserRule getItemizeRule() {
		return getItemizeAccess().getRule();
	}
	
	//ListItem:
	//    '-' inline+=InlineItem
	//;
	public ListItemElements getListItemAccess() {
		return pListItem;
	}
	
	public ParserRule getListItemRule() {
		return getListItemAccess().getRule();
	}
	
	//InlineItem:
	//    Normal | Bold | Italic | Link
	//;
	public InlineItemElements getInlineItemAccess() {
		return pInlineItem;
	}
	
	public ParserRule getInlineItemRule() {
		return getInlineItemAccess().getRule();
	}
	
	//Normal:
	//    '*' text=STRING
	//;
	public NormalElements getNormalAccess() {
		return pNormal;
	}
	
	public ParserRule getNormalRule() {
		return getNormalAccess().getRule();
	}
	
	//Bold:
	//    '~bold' text=STRING
	//;
	public BoldElements getBoldAccess() {
		return pBold;
	}
	
	public ParserRule getBoldRule() {
		return getBoldAccess().getRule();
	}
	
	//Italic:
	//    '~italic' text=STRING
	//;
	public ItalicElements getItalicAccess() {
		return pItalic;
	}
	
	public ParserRule getItalicRule() {
		return getItalicAccess().getRule();
	}
	
	//Link:
	//    '~link' '{' 'url:' url=STRING 'text:' text=STRING '}'
	//;
	public LinkElements getLinkAccess() {
		return pLink;
	}
	
	public ParserRule getLinkRule() {
		return getLinkAccess().getRule();
	}
	
	//terminal DATE:
	//    '"' ('0'..'9')('0'..'9') '-' ('0'..'9')('0'..'9') + '-' ('0'..'9')('0'..'9')('0'..'9')('0'..'9') '"';
	public TerminalRule getDATERule() {
		return tDATE;
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
